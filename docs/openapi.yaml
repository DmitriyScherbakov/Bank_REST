openapi: 3.1.0
info:
  title: Bank Cards Management API
  description: REST API для управления банковскими картами
  version: 1.0.0
  contact:
    name: Bank Development Team
    email: dev@bank.com
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Development server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
        role:
          type: string
          enum: [USER, ADMIN]
        createdAt:
          type: string
          format: date-time

    Card:
      type: object
      properties:
        id:
          type: integer
          format: int64
        maskedCardNumber:
          type: string
          example: "**** **** **** 1234"
        cardHolder:
          type: string
          maxLength: 100
        expiryDate:
          type: string
          format: date
        status:
          type: string
          enum: [ACTIVE, BLOCKED, EXPIRED]
        balance:
          type: number
          format: decimal
          example: 1500.50
        createdAt:
          type: string
          format: date-time

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        username:
          type: string
        role:
          type: string
          enum: [USER, ADMIN]

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time

paths:
  /api/test/health:
    get:
      tags:
        - Test
      summary: Проверка работоспособности
      description: Возвращает статус приложения и текущее время
      responses:
        '200':
          description: Приложение работает корректно
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  timestamp:
                    type: string
                    format: date-time
                  message:
                    type: string

  /api/test/info:
    get:
      tags:
        - Test
      summary: Информация о приложении
      description: Возвращает основную информацию о приложении
      responses:
        '200':
          description: Информация получена успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  application:
                    type: string
                  version:
                    type: string
                  description:
                    type: string

  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Вход в систему
      description: Аутентификация пользователя и получение JWT токена
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/cards/my:
    get:
      tags:
        - Cards
      summary: Получить мои карты
      description: Возвращает список карт текущего пользователя с пагинацией
      parameters:
        - name: page
          in: query
          description: Номер страницы
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: Размер страницы
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список карт получен успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: Test
    description: Тестовые эндпоинты
  - name: Authentication
    description: Аутентификация и авторизация
  - name: Cards
    description: Управление банковскими картами
  - name: Admin
    description: Административные функции
